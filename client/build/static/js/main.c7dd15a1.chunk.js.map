{"version":3,"sources":["Home.js","FilterList.js","Table.js","App.js","serviceWorker.js","index.js"],"names":["Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","create","e","preventDefault","fetch","method","then","response","json","data","setState","tableid","console","log","state","endpoint","react_default","a","createElement","Redirect","to","concat","className","Button","onClick","bsStyle","bsSize","block","Component","FilterList","style","margin","textAlign","Collapsible_default","trigger","open","props","filters","map","filter","index","key","Table","initializeStateFromLocalStorage","localStorage","hasOwnProperty","match","params","id","localval","getItem","submitted","JSON","parse","didsubmit","handleSubmit","socketIOClient","emit","nickname","category","location","price","setItem","stringify","handleChange","change","target","name","value","restaurant","_this2","socket","on","currentrestaurant","newrestaurant","src_FilterList","length","Jumbotron","onSubmit","FormGroup","ControlLabel","FormControl","type","onChange","App","BrowserRouter","Switch","Route","path","exact","component","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c7dd15a1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      endpoint: \"http://127.0.0.1:3001\",\n      tableid: null\n    };\n  }\n\n  create = e => {\n    e.preventDefault();\n    fetch(\"/tables/create\", {\n      method: \"post\"\n    })\n      .then(function(response) {\n        return response.json();\n      })\n      .then(data => {\n        // alert(`You will be redirected to Table #${data.tableid}`);\n        this.setState({ tableid: data.tableid });\n        console.log(this.state);\n      });\n\n    // send user to page of tableid\n  };\n\n  render() {\n    if (this.state.tableid != null) {\n      return <Redirect to={`/${this.state.tableid}`} />;\n    }\n\n    return (\n      <div className=\"container\">\n        <div>\n          <h1 className=\"logo\">Happy Tables!</h1>\n        </div>\n        <div>\n          <p className=\"homeinfo\">\n            <b>You and your friends</b> can finally agree on where to eat with\n            Happy Tables! We tell you where to eat, taking into account{\" \"}\n            <i>all</i> of your\n            <b> individual preferences.</b> We know how hard decision making is,\n            so let our algorithm do it <i>for you!</i>\n          </p>\n        </div>\n        <div className=\"maketablebutton\">\n          <Button onClick={this.create} bsStyle=\"primary\" bsSize=\"large\" block>\n            Make a Table!\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nclass FilterList extends Component {\n  render() {\n    return (\n      <div\n        className=\"FilterList\"\n        style={{\n          margin: \"0 auto 10px\",\n          textAlign: \"center\"\n        }}\n      >\n        <Collapsible trigger=\"Filters v\" open={true}>\n          <ul>\n            {this.props.filters.map((filter, index) => {\n              return (\n                <p key={index}>\n                  <b>{filter[0]}</b>: Category: <i>{filter[1]}</i> | Location:\n                  <i>{filter[2]}</i> | Price: <i>{filter[3]}</i>\n                </p>\n              );\n            })}\n          </ul>\n        </Collapsible>\n      </div>\n    );\n  }\n}\n\nexport default FilterList;\n","import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport {\n  Jumbotron,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  Button\n} from \"react-bootstrap\";\nimport FilterList from \"./FilterList\";\n\nclass Table extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      endpoint: \"http://127.0.0.1:3001\",\n      nickname: \"\",\n      category: \"\",\n      location: \"\",\n      price: 2,\n      didsubmit: false,\n      restaurant: \"\",\n      filters: []\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(this.state.endpoint);\n\n    // goal is to retrieve restaurant for table if it exists already\n    socket.emit(\"new user\", this.props.match.params.id);\n\n    socket.on(\"current restaurant name\", (currentrestaurant, filters) => {\n      this.setState({ restaurant: currentrestaurant, filters: filters });\n      console.log(filters);\n    });\n\n    // server emits next two events after filters are added\n    socket.on(\"new restaurant\", (newrestaurant, tableid) => {\n      if (tableid === this.props.match.params.id) {\n        this.setState({ restaurant: newrestaurant });\n      }\n    });\n\n    socket.on(\"new filters\", filters => {\n      this.setState({ filters: filters });\n      console.log(filters);\n    });\n\n    this.initializeStateFromLocalStorage();\n  }\n\n  initializeStateFromLocalStorage = () => {\n    // check if user has submitted to this table yet\n    if (localStorage.hasOwnProperty(this.props.match.params.id)) {\n      let localval = localStorage.getItem(this.props.match.params.id);\n      let submitted = JSON.parse(localval);\n      console.log(\"didMount didsubmit: \" + submitted);\n      if (submitted) {\n        this.setState({ didsubmit: true });\n      }\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    // alert(`u put ${this.state.category} and ${this.state.location}`);\n\n    const socket = socketIOClient(this.state.endpoint);\n    socket.emit(\n      \"new filters\",\n      this.state.nickname,\n      this.state.category,\n      this.state.location,\n      this.state.price,\n      this.props.match.params.id\n    );\n\n    this.setState({ didsubmit: true }, () => {\n      let submitted = this.state.didsubmit;\n      // save state for this table in browser\n      localStorage.setItem(\n        this.props.match.params.id,\n        JSON.stringify(submitted)\n      );\n    });\n  };\n\n  handleChange = e => {\n    let change = {};\n    change[e.target.name] = e.target.value;\n    this.setState(change);\n  };\n\n  render() {\n    console.log(this.props);\n    if (this.state.didsubmit === true) {\n      return (\n        <div>\n          <div>\n            <h2>\n              Hi Table #{this.props.match.params.id}, what would you like to\n              eat?\n            </h2>\n          </div>\n          <div>\n            <h2>\n              You should eat at <b>{this.state.restaurant}!</b>\n            </h2>\n          </div>\n          <div className=\"FilterList\">\n            <FilterList filters={this.state.filters} />\n          </div>\n        </div>\n      );\n    } else if (this.state.restaurant.length > 0) {\n      return (\n        <div>\n          <div>\n            <h2>\n              Hi Table #{this.props.match.params.id}, what would you like to\n              eat?\n            </h2>\n          </div>\n          <div className=\"container\">\n            <Jumbotron className=\"jumbotron\">\n              <form onSubmit={this.handleSubmit}>\n                <FormGroup>\n                  <ControlLabel>Nickname:</ControlLabel>\n                  <FormControl\n                    type=\"text\"\n                    name=\"nickname\"\n                    value={this.state.nickname}\n                    onChange={this.handleChange}\n                  />\n                  <ControlLabel>Category:</ControlLabel>\n                  <FormControl\n                    type=\"text\"\n                    name=\"category\"\n                    value={this.state.category}\n                    onChange={this.handleChange}\n                  />\n                  <ControlLabel>Location:</ControlLabel>\n                  <FormControl\n                    type=\"text\"\n                    name=\"location\"\n                    value={this.state.location}\n                    onChange={this.handleChange}\n                  />\n                  <ControlLabel>Price:</ControlLabel>\n                  <FormControl\n                    type=\"text\"\n                    name=\"price\"\n                    value={this.state.price}\n                    onChange={this.handleChange}\n                  />\n                  <Button type=\"submit\">Submit</Button>\n                </FormGroup>\n              </form>\n            </Jumbotron>\n          </div>\n          <div>\n            <h2>\n              You should eat at <b>{this.state.restaurant}!</b>\n            </h2>\n          </div>\n          <div className=\"FilterList\">\n            <FilterList filters={this.state.filters} />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <div>\n            <h2>\n              Hi Table #{this.props.match.params.id}, what would you like to\n              eat?\n            </h2>\n          </div>\n          <div className=\"container\">\n            <Jumbotron className=\"jumbotron\">\n              <form onSubmit={this.handleSubmit}>\n                <FormGroup>\n                  <ControlLabel>Nickname:</ControlLabel>\n                  <FormControl\n                    type=\"text\"\n                    name=\"nickname\"\n                    value={this.state.nickname}\n                    onChange={this.handleChange}\n                  />\n                  <ControlLabel>Category:</ControlLabel>\n                  <FormControl\n                    type=\"text\"\n                    name=\"category\"\n                    value={this.state.category}\n                    onChange={this.handleChange}\n                  />\n                  <ControlLabel>Location:</ControlLabel>\n                  <FormControl\n                    type=\"text\"\n                    name=\"location\"\n                    value={this.state.location}\n                    onChange={this.handleChange}\n                  />\n                  <ControlLabel>Price:</ControlLabel>\n                  <FormControl\n                    type=\"text\"\n                    name=\"price\"\n                    value={this.state.price}\n                    onChange={this.handleChange}\n                  />\n                  <Button type=\"submit\">Submit</Button>\n                </FormGroup>\n              </form>\n            </Jumbotron>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Table from \"./Table\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      tableid: null\n    };\n  }\n\n  // render methods that renders if the state is updated\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/:id\" component={Table} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}